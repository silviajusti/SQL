#This project utilizes the following Superstore data: 

CREATE TABLE superstore (
    item_id INTEGER PRIMARY KEY,
    item_name TEXT,
    category TEXT,
    price DECIMAL(10, 2),
    stock_quantity INTEGER,
    average_rating DECIMAL(3, 2)
);

INSERT INTO superstore (item_id, item_name, category, price, stock_quantity, average_rating)
VALUES
    (1, 'Stainless Steel Cookware Set', 'Kitchen Supplies', 89.99, 50, 4.6),
    (2, 'Memory Foam Mattress', 'Furnishings', 499.99, 30, 4.8),
    (3, 'Smart LED TV', 'Electronics', 549.00, 20, 4.5),
    (4, 'Robot Vacuum Cleaner', 'Appliances', 199.50, 40, 4.3),
    (5, 'Wireless Bluetooth Speaker', 'Electronics', 39.99, 60, 4.2),
    (6, 'Non-Stick Baking Set', 'Kitchen Supplies', 29.95, 80, 4.4),
    (7, 'Cotton Bedding Set', 'Furnishings', 89.00, 25, 4.7),
    (8, 'Smart Home Security Camera', 'Electronics', 79.95, 15, 4.1),
    (9, 'Air Purifier', 'Appliances', 129.50, 35, 4.6),
    (10, 'Premium Coffee Maker', 'Kitchen Supplies', 79.99, 50, 4.9),
    (11, 'Ergonomic Office Chair', 'Furnishings', 189.00, 20, 4.5),
    (12, 'Wireless Earbuds', 'Electronics', 49.99, 75, 4.3),
    (13, 'Slow Cooker', 'Appliances', 49.95, 30, 4.7),
    (14, 'Cutlery Set', 'Kitchen Supplies', 34.50, 40, 4.4),
    (15, 'Cozy Throw Blanket', 'Furnishings', 24.99, 100, 4.2);

#For this project, I used SQL to query the Superstore database to get information about items sold at the store and their prices. 

#return items listed by ordering by price, in descending order
SELECT item_name, price
FROM superstore
ORDER BY price desc;

#return basic stats on prices
SELECT avg(price) FROM superstore;
SELECT max(price) FROM superstore;
SELECT min(price) FROM superstore;

#return basic stats on prices from a given category
SELECT avg(price) FROM superstore WHERE category="Kitchen Supplies"
SELECT max(price) FROM superstore WHERE category="Kitchen Supplies"
SELECT min(price) FROM superstore WHERE category="Kitchen Supplies"

#return the categroy with the highest price (without listing price)

SELECT category
FROM superstore
GROUP BY category
ORDER BY MAX(price) DESC
LIMIT 1;

#return the categroy with the highest price (listing price)
SELECT category, MAX(price)
FROM superstore
GROUP BY category
ORDER BY MAX(price) DESC
LIMIT 1;

#return the categroy with the lowest price (without listing price)
SELECT category
FROM superstore
GROUP BY category
ORDER BY MIN(price) DESC
LIMIT 1;

#return the categroy with the lowest price (listing price)
SELECT category, MIN(price)
FROM superstore
GROUP BY category
ORDER BY MIN(price) DESC
LIMIT 1;

